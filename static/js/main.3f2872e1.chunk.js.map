{"version":3,"sources":["components/flashcard/flashcard.component.tsx","components/spinner/spinner.component.tsx","components/flashcard-list/flashcard-list.component.tsx","utils.ts","App.tsx","index.tsx"],"names":["FlashCard","flashcard","useState","flip","setFlip","height","setHeight","frontRef","useRef","backRef","cardRef","document","createElement","calculateMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","setTimeout","question","window","addEventListener","removeEventListener","className","style","onClick","ref","options","map","option","index","data-value","key","e","event","currentTarget","getAttribute","answer","backgroundColor","Spinner","container","hidden","opacity","scale","visible","transition","delay","when","staggerChildren","item","FlashcardList","flashcards","length","ul","initial","animate","variants","div","id","elem","decodeString","str","textArea","innerHTML","value","App","setFlashcards","categories","setCategories","categoryRef","amountRef","axios","get","then","res","data","trivia_categories","results","correct_answer","incorrect_answers","a","Date","now","sort","random","onSubmit","preventDefault","params","amount","category","handleSubmit","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3f2872e1.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\ninterface Flashcard {\r\n  id: number;\r\n  question: string;\r\n  answer: string;\r\n  options: string[];\r\n}\r\n\r\nconst FlashCard: React.FC<{ flashcard: Flashcard }> = ({ flashcard }) => {\r\n  const [flip, setFlip] = useState(false);\r\n  const [height, setHeight] = useState(0);\r\n\r\n  // Keeps track of the element's height\r\n  const frontRef = useRef<HTMLDivElement>(null);\r\n  const backRef = useRef<HTMLDivElement>(null);\r\n\r\n  // Keeps track of parent element to style \r\n  const cardRef = useRef<HTMLDivElement>(document.createElement(\"div\"));\r\n\r\n  const calculateMaxHeight = () => {\r\n    const frontHeight: number =\r\n      frontRef.current?.getBoundingClientRect().height || 0;\r\n    const backHeight: number =\r\n      frontRef.current?.getBoundingClientRect().height || 0;\r\n    setHeight(Math.max(frontHeight, backHeight, 100));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      calculateMaxHeight();  \r\n    },1500)\r\n  }, [flashcard.question]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", calculateMaxHeight);\r\n\r\n    return () => window.removeEventListener(\"resize\", calculateMaxHeight);\r\n  }, []);\r\n\r\n  // Styles parent element based on the option user selected\r\n  const tryOption = (event: React.MouseEvent) => {\r\n    setFlip(!flip);\r\n    event.currentTarget.getAttribute(\"data-value\") === flashcard.answer\r\n      ? (cardRef.current.style.backgroundColor = \"green\")\r\n      : (cardRef.current.style.backgroundColor = \"red\");\r\n    setTimeout(() => {\r\n      cardRef.current.style.backgroundColor = \"white\";\r\n    }, 1000);\r\n  };\r\n\r\n  // Card flip is done by custom css class animation \"flip\"\r\n  return (\r\n    <div\r\n      className={`card ${flip ? \"flip\" : \"\"}`}\r\n      style={{ height: `${height > 100 ? `${height}px` : \"100px\"}` }}\r\n      onClick={() => setFlip(!flip)}\r\n      ref={cardRef}\r\n    >\r\n      <div className=\"front\" ref={frontRef}>\r\n        <div className=\"question-title\">\r\n          <h4>{flashcard.question}</h4>\r\n        </div>\r\n        <div className=\"options\">\r\n          {flashcard.options.map((option, index) => {\r\n            return (\r\n              <button\r\n                data-value={option}\r\n                className=\"option\"\r\n                key={index}\r\n                onClick={(e) => tryOption(e)}\r\n              >\r\n                {option}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n      <div className=\"back\" ref={backRef}>\r\n        {flashcard.answer}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlashCard;\r\n","import React from \"react\";\r\n\r\nimport \"./spinner.styles.css\";\r\n\r\nconst Spinner:React.FC = () => (<span className=\"spinner\"/>)\r\n\r\nexport default Spinner","import React from \"react\";\r\nimport FlashCard from \"../flashcard/flashcard.component\";\r\nimport Spinner from \"../spinner/spinner.component\";\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface Flashcard {\r\n  id: number;\r\n  question: string;\r\n  answer: string;\r\n  options: string[];\r\n}\r\n\r\ninterface Props {\r\n  flashcards: Flashcard[];\r\n}\r\n\r\n// Grid framer-motion animation props\r\nconst container = {\r\n  hidden: { opacity: 1, scale: 0 },\r\n  visible: {\r\n    opacity: 1,\r\n    scale: 1,\r\n    transition: {\r\n      delay: 0.3,\r\n      when: \"beforeChildren\",\r\n      staggerChildren: 0.1,\r\n    },\r\n  },\r\n};\r\n\r\n// Grid item framer-motion animation props\r\nconst item = {\r\n  hidden: { opacity: 0 },\r\n  visible: {\r\n    opacity: 1,\r\n  },\r\n};\r\n\r\nconst FlashcardList: React.FC<Props> = ({ flashcards }) => {\r\n  return (\r\n    <div>\r\n      {flashcards && flashcards.length ? (\r\n        <motion.ul initial=\"hidden\" animate=\"visible\" variants={container}>\r\n          <div className=\"card-grid\">\r\n            {flashcards.map((flashcard) => {\r\n              return (\r\n                <motion.div variants={item} key={flashcard.id}>\r\n                  <FlashCard flashcard={flashcard} />\r\n                </motion.div>\r\n              );\r\n            })}\r\n          </div>\r\n        </motion.ul>\r\n      ) : (\r\n        <div className=\"card-grid\">\r\n          {[1, 2, 3, 4].map((elem, index) => {\r\n            return (\r\n              <motion.div key={index} variants={item} className=\"card\">\r\n                <Spinner />\r\n              </motion.div>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FlashcardList;","// Decodes HTML entities such as #&quot\r\nexport const decodeString = (str: string) => {\r\n  const textArea: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n  textArea.innerHTML = str;\r\n  return textArea.value;\r\n};","import React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\n\nimport FlashcardList from \"./components/flashcard-list/flashcard-list.component\";\nimport { decodeString } from \"./utils\";\n\nimport \"./App.css\";\n\ninterface APIResponse {\n  question: string;\n  correct_answer: string;\n  incorrect_answers: string[];\n}\n\ninterface Category {\n  id: string;\n  name: string;\n}\n\nconst App: React.FC = () => {\n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState<Category[]>([]);\n  const categoryRef = useRef<HTMLSelectElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n\n\n  // Fetches and provides categories for select input\n  useEffect(() => {\n    axios\n      .get(\"https://opentdb.com/api_category.php\")\n      .then((res) => setCategories(res.data.trivia_categories));\n  }, []);\n\n  // Fetches initial quizz questions \n  useEffect(() => {\n    axios.get(\"https://opentdb.com/api.php?amount=10\").then((res) => {\n      setFlashcards(\n        res.data.results.map((item: APIResponse, index: number) => {\n          const answer = decodeString(item.correct_answer);\n          const options = [\n            ...item.incorrect_answers.map((a: string) => decodeString(a)),\n            answer,\n          ];\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(item.question),\n            answer: decodeString(answer),\n            options: options.sort(() => Math.random() - 0.5),\n          };\n        })\n      );\n    });\n  }, []);\n\n// Fetches custom quizz questions based on the users input\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    axios.get(\"https://opentdb.com/api.php?amount=10\", {\n      params: {\n        amount: amountRef.current?.value,\n        category: categoryRef.current?.value\n      }\n    }).then((res) => {\n      setFlashcards(\n        res.data.results.map((item: APIResponse, index: number) => {\n          const answer = decodeString(item.correct_answer);\n          const options = [\n            ...item.incorrect_answers.map((a: string) => decodeString(a)),\n            answer,\n          ];\n          return {\n            id: `${index}-${Date.now()}`,\n            question: decodeString(item.question),\n            answer: decodeString(answer),\n            options: options.sort(() => Math.random() - 0.5),\n          };\n        })\n      );\n    });\n  };\n\n  return (\n    <>\n      <form className=\"header\" onSubmit={(event) => handleSubmit(event)}>\n        <div className=\"form-group\">\n          <label htmlFor=\"category\">Category</label>\n          <select name=\"category\" id=\"category\" ref={categoryRef}>\n            {categories.length ? (categories.map((category) => (\n              <option value={category.id} key={category.id}>\n                {category.name}\n              </option>)\n            )) : (<option>Loading...</option>)}\n          </select>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"amount\">Number of Questions</label>\n          <input\n            type=\"number\"\n            id=\"amount\"\n            min=\"1\"\n            step=\"1\"\n            defaultValue={10}\n            ref={amountRef}\n          />\n        </div>\n        <div className=\"form-group\">\n          <button className=\"btn\" type=\"submit\">Generate</button>\n        </div>\n      </form>\n      <div className=\"container\">\n        <FlashcardList flashcards={flashcards} />\n      </div>\n      ;\n    </>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}